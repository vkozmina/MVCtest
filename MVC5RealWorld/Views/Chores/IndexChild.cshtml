@model IEnumerable<MVC5RealWorld.Models.DB.Chore>
@using System.Data.Entity
@using MVC5RealWorld.Models.DB
@using MVC5RealWorld.Models.EntityManager

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Chores</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.AssignedTo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BronzeValue)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SilverValue)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GoldValue)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.IsAssigned)
        </th>*@
        @*<th>
            @Html.DisplayNameFor(model => model.IsCompleted)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsConfirmed)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.MaturityLevel)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.StartDate)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.DeadlineDate)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.NeedExtension)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RequestedExtensionDeadline)
        </th>*@
        @*<th>
            @Html.DisplayNameFor(model => model.Multiplier)
        </th>*@
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.AssignedTo)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BronzeValue)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SilverValue)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.GoldValue)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.IsAssigned)
        </td>*@
        @*<td>
            @Html.DisplayFor(modelItem => item.IsCompleted)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsConfirmed)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.MaturityLevel)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.StartDate)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.DeadlineDate)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.NeedExtension)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RequestedExtensionDeadline)
        </td>*@
        @*<td>
            @Html.DisplayFor(modelItem => item.Multiplier)
        </td>*@
        <td>
            @Html.ActionLink("Details", "Details", new { id=item.ChoreID }) |
            @Html.ActionLink("Extension", "EditExtension", new { id = item.ChoreID })

        </td>
    </tr>
}

</table>
@functions{
    public bool IsUserInRole(string loginName, string roleName)
    {
        using (DB_A11531_francistestEntities db = new DB_A11531_francistestEntities())
        {
            SYSUser SU = db.SYSUsers.Where(o => o.LoginName.ToLower().Equals(loginName))?.FirstOrDefault();
            if (SU != null)
            {
                var roles = from q in db.SYSUserRoles
                            join r in db.LOOKUPRoles on q.LOOKUPRoleID equals r.LOOKUPRoleID
                            where r.RoleName.Equals(roleName) && q.SYSUserID.Equals(SU.SYSUserID)
                            select r.RoleName;

                if (roles != null)
                {
                    return roles.Any();
                }
            }

            return false;
        }
    }

}
