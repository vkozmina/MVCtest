@using System.Data.Entity
@using MVC5RealWorld.Models.DB
@using MVC5RealWorld.Models.EntityManager

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - ADDicting Chores</title>
    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="~/Content/bootstrap.css" />

    <script src="~/Scripts/modernizr-2.6.2.js"></script>
    <script src="~/Scripts/jquery-1.12.4.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />
</head>
<body>

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @if (Context.User.Identity.Name.Length > 0)
            {
                @Html.ActionLink("ADDicting Chores", "Welcome", "Home", new {area = ""}, new {@class = "navbar-brand"})
            }
            else
            {
                @Html.ActionLink("ADDicting Chores", "Index", "Home", new {area = ""}, new {@class = "navbar-brand"})
            }

        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                @*<li>@Html.ActionLink("Addicting Chores", "Index", "Home")</li>*@
                @if (Context.User.Identity.Name.Length > 0)
                {
                        @*<li>@Html.ActionLink("Children", "AdminOnly", "Home")</li>*@
                    if (IsUserInRole(Context.User.Identity.Name, "Admin") || IsUserInRole(Context.User.Identity.Name, "Parent"))
                    {
                        <li>@Html.ActionLink("Chores", "Index", "Chores")</li>
                    }
                    else
                    {
                        <li>@Html.ActionLink("Chores", "IndexChild", "Chores")</li>
                    }



                    if (IsUserInRole(Context.User.Identity.Name, "Admin") || IsUserInRole(Context.User.Identity.Name, "Parent"))
                    {
                        <li>@Html.ActionLink("Rewards", "Index", "Rewards")</li>
                    }
                    else
                    {
                        <li>@Html.ActionLink("Rewards", "IndexChild", "Rewards")</li>
                    }
                    <li>@Html.ActionLink("Edit Profile", "EditProfile", "Home")</li>
                    <li>@Html.ActionLink("Signout", "SignOut", "Account")</li>
                }
                else
                {
                    <li>@Html.ActionLink("About", "About", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Contact", "Home")</li>
                    <li>@Html.ActionLink("Documents", "Documents", "Home")</li>
                    <li>@Html.ActionLink("Login", "LogIn", "Account")</li>
                    <li>@Html.ActionLink("Signup Now!", "SignUp", "Account")</li>
                }
            </ul>
        </div>
    </div>
</div>
<div class="container body-content">
    @RenderBody()
    <hr/>
    <footer>
        <p>Developed by Viktoriya Kozmina and Francis Schommer</p>
    </footer>
</div>




</body>
</html>

@functions{
    public bool IsUserInRole(string loginName, string roleName)
    {
        using (DB_A11531_francistestEntities db = new DB_A11531_francistestEntities())
        {
            SYSUser SU = db.SYSUsers.Where(o => o.LoginName.ToLower().Equals(loginName))?.FirstOrDefault();
            if (SU != null)
            {
                var roles = from q in db.SYSUserRoles
                            join r in db.LOOKUPRoles on q.LOOKUPRoleID equals r.LOOKUPRoleID
                            where r.RoleName.Equals(roleName) && q.SYSUserID.Equals(SU.SYSUserID)
                            select r.RoleName;

                if (roles != null)
                {
                    return roles.Any();
                }
            }

            return false;
        }
    } 
}
