@using System.Data.Entity
@using MVC5RealWorld.Models.DB
@using MVC5RealWorld.Models.EntityManager

@{
    ViewBag.Title = "Welcome";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Hi <b>@Context.User.Identity.Name</b>!</h2>  

@*@IsUserInRole(Context.User.Identity.Name,"Admin")
@IsUserInRole(Context.User.Identity.Name, "Toddler")*@


    @if (IsUserInRole(Context.User.Identity.Name, "Admin"))
    { @*@:yes you're an admin*@
        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <a data-toggle="collapse" href="#divUserListContainer" aria-expanded="False" aria-controls="divUserListContainer">
                        Manage the children / users
                    </a>
                </h3>
            </div>
        </div>
        <div id="divUserListContainer" class="panel-body collapse">
            If you're seeing this, you're an Admin! :)
            @Html.ActionLink("Create new account", "SignUp", "Account")
            <div>
                @Html.Action("ManageUserPartial", "Home")
            </div>
            
        </div>
    }
    else
    {
        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <a data-toggle="collapse" href="#divUserListContainer" aria-expanded="True" aria-controls="divUserListContainer">
                        Wallet
                    </a>
                </h3>
            </div>
            <div id="divUserListContainer" class="panel-body collapse in">
                @{
                    var list = getWalletValue(Context.User.Identity.Name);
                }
                <table class="table table-bordered">
                    <thead>
                    <tr>
                        <th>Bronze</th>
                        <th>Silver</th>
                        <th>Gold</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr>
                        <td>@list[0]</td>
                        <td>@list[1]</td>
                        <td>@list[2]</td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>

                    }
            @*@if (IsUserInRole(Context.User.Identity.Name, "Toddler"))
                { @:YOU ARE SUCH A GOOD TODDLER YES YOU ARE :)

                }*@
       



@functions{
    public bool IsUserInRole(string loginName, string roleName)
    {
        using (DB_A11531_francistestEntities db = new DB_A11531_francistestEntities())
        {
            SYSUser SU = db.SYSUsers.Where(o => o.LoginName.ToLower().Equals(loginName)).FirstOrDefault();
            if (SU != null)
            {
                var roles = from q in db.SYSUserRoles
                            join r in db.LOOKUPRoles on q.LOOKUPRoleID equals r.LOOKUPRoleID
                            where r.RoleName.Equals(roleName) && q.SYSUserID.Equals(SU.SYSUserID)
                            select r.RoleName;

                if (roles != null)
                {
                    return roles.Any();
                }
            }

            return false;
        }
    }

    public List<int> getWalletValue(string loginName)
    {
        using (DB_A11531_francistestEntities db = new DB_A11531_francistestEntities())
        {
            var user = db.SYSUsers.Where(o => o.LoginName.ToLower().Equals(loginName));
            var wallet = db.SYSUserProfiles.Where(o => o.SYSUserID.Equals(user.FirstOrDefault().SYSUserID));
            List<int> moniesList = new List<int>();
            if (wallet.Any())
            {
                moniesList.Add(wallet.FirstOrDefault().BronzeBalance.Value);
                moniesList.Add(wallet.FirstOrDefault().SilverBalance.Value);
                moniesList.Add(wallet.FirstOrDefault().GoldBalance.Value);
                return moniesList;
            }
            else
            {
                moniesList.Add(0);
                moniesList.Add(0);
                moniesList.Add(0);
                return moniesList;
            }
        }
    }

   
}