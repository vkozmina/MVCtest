@model MVC5RealWorld.Models.DB.Reward
@using System.Data.Entity
@using MVC5RealWorld.Models.DB
@using MVC5RealWorld.Models.EntityManager

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div>
    <h4>Reward</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.BronzeValue)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.BronzeValue)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SilverValue)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SilverValue)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GoldValue)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.GoldValue)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MaturityLevel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.MaturityLevel)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Multiplier)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Multiplier)
        </dd>

    </dl>
</div>
<p>

@if (IsUserInRole(Context.User.Identity.Name, "Admin") | IsUserInRole(Context.User.Identity.Name, "Parent"))
{
    @Html.ActionLink("Edit", "Edit", new { id = Model.RewardID })
    @Html.ActionLink("Back to List", "Index")
}
else
{
    @Html.ActionLink("Back to List", "IndexChild")
}
</p>

@functions{
    public bool IsUserInRole(string loginName, string roleName)
    {
        using (DB_A11531_francistestEntities db = new DB_A11531_francistestEntities())
        {
            SYSUser SU = db.SYSUsers.Where(o => o.LoginName.ToLower().Equals(loginName))?.FirstOrDefault();
            if (SU != null)
            {
                var roles = from q in db.SYSUserRoles
                            join r in db.LOOKUPRoles on q.LOOKUPRoleID equals r.LOOKUPRoleID
                            where r.RoleName.Equals(roleName) && q.SYSUserID.Equals(SU.SYSUserID)
                            select r.RoleName;

                if (roles != null)
                {
                    return roles.Any();
                }
            }

            return false;
        }
    }

}